services:
    Heptacom\HeptaConnect\Storage\ShopwareDal\ContextFactory: ~

    Heptacom\HeptaConnect\Storage\ShopwareDal\Content\Cronjob\CronjobDefinition:
        tags:
            - { name: shopware.entity.definition, entity: heptaconnect_cronjob }

    Heptacom\HeptaConnect\Storage\ShopwareDal\Content\Cronjob\CronjobRunDefinition:
        tags:
            - { name: shopware.entity.definition, entity: heptaconnect_cronjob_run }

    Heptacom\HeptaConnect\Storage\ShopwareDal\Content\EntityType\EntityTypeDefinition:
        tags:
            - { name: shopware.entity.definition, entity: heptaconnect_entity_type }

    Heptacom\HeptaConnect\Storage\ShopwareDal\Content\Mapping\MappingDefinition:
        tags:
            - { name: shopware.entity.definition, entity: heptaconnect_mapping }

    Heptacom\HeptaConnect\Storage\ShopwareDal\Content\Mapping\MappingErrorMessageDefinition:
        tags:
            - { name: shopware.entity.definition, entity: heptaconnect_mapping_error_message }

    Heptacom\HeptaConnect\Storage\ShopwareDal\Content\Mapping\MappingNodeDefinition:
        tags:
            - { name: shopware.entity.definition, entity: heptaconnect_mapping_node }

    Heptacom\HeptaConnect\Storage\ShopwareDal\Content\PortalNode\PortalNodeDefinition:
        tags:
            - { name: shopware.entity.definition, entity: heptaconnect_portal_node }

    Heptacom\HeptaConnect\Storage\ShopwareDal\Content\PortalNode\PortalNodeStorageDefinition:
        tags:
            - { name: shopware.entity.definition, entity: heptaconnect_portal_node_storage }

    Heptacom\HeptaConnect\Storage\ShopwareDal\Content\Job\JobDefinition:
        tags:
            - { name: shopware.entity.definition, entity: heptaconnect_job }

    Heptacom\HeptaConnect\Storage\ShopwareDal\Content\Job\JobPayloadDefinition:
        tags:
            - { name: shopware.entity.definition, entity: heptaconnect_job_payload }

    Heptacom\HeptaConnect\Storage\ShopwareDal\Content\Job\JobTypeDefinition:
        tags:
            - { name: shopware.entity.definition, entity: heptaconnect_job_type }

    Heptacom\HeptaConnect\Storage\ShopwareDal\Content\Route\RouteDefinition:
        tags:
            - { name: shopware.entity.definition, entity: heptaconnect_route }

    Heptacom\HeptaConnect\Storage\ShopwareDal\EntityReflector:
        arguments:
            - '@heptaconnect_mapping.repository'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\ContextFactory'

    Heptacom\HeptaConnect\Storage\ShopwareDal\PortalStorage:
        arguments:
            - '@heptaconnect_portal_node_storage.repository'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\ContextFactory'

    Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\CronjobRepository:
        arguments:
            - '@heptaconnect_cronjob.repository'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\StorageKeyGenerator'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\ContextFactory'

    Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\CronjobRunRepository:
        arguments:
            - '@heptaconnect_cronjob.repository'
            - '@heptaconnect_cronjob_run.repository'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\StorageKeyGenerator'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\ContextFactory'

    Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\MappingExceptionRepository:
        arguments:
            - '@heptaconnect_mapping_error_message.repository'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\StorageKeyGenerator'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\ContextFactory'

    Heptacom\HeptaConnect\Storage\Base\Contract\Repository\MappingRepositoryContract:
        class: 'Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\MappingRepository'
        arguments:
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\StorageKeyGenerator'
            - '@heptaconnect_mapping.repository'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\ContextFactory'

    Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\MappingRepository:
        alias: 'Heptacom\HeptaConnect\Storage\Base\Contract\Repository\MappingRepositoryContract'

    Heptacom\HeptaConnect\Storage\ShopwareDal\MigrationSource:
        tags:
            - { name: shopware.migration_source }

    Heptacom\HeptaConnect\Storage\ShopwareDal\StorageKeyGenerator: ~

    Heptacom\HeptaConnect\Storage\ShopwareDal\ResourceLockStorage:
        arguments:
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\ResourceLockStorage.lock_factory'

    Heptacom\HeptaConnect\Storage\ShopwareDal\ResourceLockStorage.lock_factory:
        class: Symfony\Component\Lock\LockFactory
        arguments:
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Parallelization\FlockStore'
