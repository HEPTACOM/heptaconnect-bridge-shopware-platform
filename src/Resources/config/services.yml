imports:
    - { resource: packages/core.yml }
    - { resource: packages/storage-shopware-dal.yml }

services:
    _defaults:
        autoconfigure: true

    _instanceof:
        Symfony\Component\Console\Command\Command:
            tags:
                - { name: console.command }

        Symfony\Component\Messenger\Handler\MessageSubscriberInterface:
            tags:
                - { name: messenger.message_handler }

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\:
        resource: '../../*'
        exclude:
            - '../../{Resources,Migration,Bundle.php}'
            - '../../Messaging/*/*Message.php'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\PortalList:
        arguments:
            - '@Heptacom\HeptaConnect\Core\Portal\ComposerPortalLoader'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\DataTypeList:
        arguments:
            - '@Heptacom\HeptaConnect\Core\Portal\ComposerPortalLoader'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\Explore:
        arguments:
            - '@Heptacom\HeptaConnect\Core\Exploration\ExploreService'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'
            - '@Heptacom\HeptaConnect\Core\Mapping\Publisher'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\Router\AddRoute:
        arguments:
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\RouteRepository'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\PortalNodeRepository'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\Router\ListRoutes:
        arguments:
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\RouteRepository'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\PortalNodeRepository'
            - '@Heptacom\HeptaConnect\Core\Portal\PortalRegistry'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\Cronjob\EnsureQueue:
        arguments:
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\CronjobRunRepository'
            - '@messenger.bus.shopware'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\Cronjob\Queue:
        arguments:
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\CronjobRepository'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\CronjobRunRepository'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'
            - '@messenger.bus.shopware'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\MappingNode\ListMappingNodes:
        arguments:
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\MappingRepository'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\MappingNode\ListMappingNodeSiblings:
        arguments:
            - '@Heptacom\HeptaConnect\Core\Portal\ComposerPortalLoader'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\PortalNodeRepository'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\MappingRepository'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\MappingNodeRepository'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\MappingNode\MergeMappingNodes:
        arguments:
            - '@Heptacom\HeptaConnect\Core\Mapping\MappingService'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\PortalNode\Configuration\Get:
        arguments:
            - '@Heptacom\HeptaConnect\Core\Configuration\ConfigurationService'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\PortalNode\Configuration\Reset:
        arguments:
            - '@Heptacom\HeptaConnect\Core\Configuration\ConfigurationService'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\PortalNode\Configuration\Set:
        arguments:
            - '@Heptacom\HeptaConnect\Core\Configuration\ConfigurationService'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\PortalNode\AddPortalNode:
        arguments:
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\PortalNodeRepository'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\PortalNode\ListPortalNodes:
        arguments:
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\PortalNodeRepository'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\PortalNode\RemovePortalNode:
        arguments:
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\PortalNodeRepository'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\PortalNode\ReportPortalNode:
        arguments:
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'
            - '@Heptacom\HeptaConnect\Core\StatusReporting\StatusReportingService'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\Support\Alias\ListAliases:
        arguments:
            - '@heptaconnect_bridge_key_alias.repository'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\Support\Alias\Reset:
        arguments:
            - '@heptaconnect_bridge_key_alias.repository'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Command\Support\Alias\Set:
        arguments:
            - '@heptaconnect_bridge_key_alias.repository'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\StorageKeyGenerator'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Core\Mapping\PublisherDecorator:
        decorates: 'Heptacom\HeptaConnect\Core\Mapping\Publisher'
        arguments:
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Core\Mapping\PublisherDecorator.inner'
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\StorageKeyGenerator'
        tags:
            - { name: kernel.event_subscriber }

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Content\KeyAlias\KeyAliasDefinition:
        tags:
            - { name: shopware.entity.definition, entity: heptaconnect_bridge_key_alias }

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Messaging\Cronjob\CronjobRunHandler:
        arguments:
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\CronjobRunRepository'
            - '@Heptacom\HeptaConnect\Core\Cronjob\CronjobContextFactory'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Messaging\Cronjob\CronjobRunMessageHandler:
        arguments:
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\Repository\CronjobRunRepository'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Messaging\Cronjob\CronjobRunHandler'
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Parallelization\FlockStore:
        arguments:
            - '%kernel.cache_dir%/heptaconnect_lock'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\PatchProvider\EntityRepository:
        arguments:
            - '%kernel.shopware_version%'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator:
        arguments:
            - '@Heptacom\HeptaConnect\Storage\ShopwareDal\StorageKeyGenerator'
            - '@heptaconnect_bridge_key_alias.repository'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\MigrationSource:
        tags:
            - { name: shopware.migration_source }

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Webhook\WebhookController:
        arguments:
            - '@Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Support\AliasStorageKeyGenerator'
            - '@Heptacom\HeptaConnect\Core\Webhook\WebhookContextFactory'
        tags:
            - { name: controller.service_arguments }

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Webhook\UrlProvider:
        arguments:
            - '@router.default'

    Heptacom\HeptaConnect\Bridge\ShopwarePlatform\Discovery\Strategy:
        public: true
        calls:
            - [setWebhookService, ['@Heptacom\HeptaConnect\Core\Webhook\WebhookService']]
            - [setCronjobService, ['@Heptacom\HeptaConnect\Core\Cronjob\CronjobService']]
            - [setResourceLockingService, ['@Heptacom\HeptaConnect\Core\Parallelization\ResourceLocking']]
            - [setPublisher, ['@Heptacom\HeptaConnect\Core\Mapping\Publisher']]
